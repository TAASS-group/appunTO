services:
  userservice-app:
    build:
      context: ../../backend/userService
      args:
        firebase_service_account_file: firebase_service_account_file.json
    container_name: userservice-app
    ports:
      - 8080
    depends_on:
      - apigateway-app
      - userservice-db
      - eurekaserver-app
    networks:
      userservice-internal:
      internal:
    labels:
      kompose.image-pull-policy: Never

  userservice-db:
    image: postgres
    container_name: userservice-db
    restart: unless-stopped
    volumes:
      - userservice-db-data:/var/lib/postgresql/data
    ports:
      - 5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userservice
    networks:
      userservice-internal:

  fileservice-app:
    build:
      context: ../../backend/fileService
    container_name: fileservice-app
    ports:
      - 8080
    depends_on:
      - apigateway-app
      - fileservice-db
      - eurekaserver-app
    networks:
      fileservice-internal:
      internal:
    labels:
      kompose.image-pull-policy: Never

  fileservice-db:
    image: mongo
    container_name: fileservice-db
    ports:
      - 27017
    volumes:
      - fileservice-db-data:/data/db
      - fileservice-db-config:/data/configdb
    environment: #TODO: mettere a posto credenziali!
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: fileservice
    networks:
      fileservice-internal:

  courseservice-app:
    build:
      context: ../../../backend/courseservice
    container_name: courseservice-app
    ports:
      - 8080
    depends_on:
      - apigateway-app
      - courseservice-db
      - eurekaserver-app
    networks:
      courseservice-internal:
      internal:
    labels:
      kompose.image-pull-policy: Never

  courseservice-db:
    image: postgres
    container_name: courseservice-db
    restart: unless-stopped
    volumes:
      - courseservice-db-data:/var/lib/postgresql/data
    ports:
      - 5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: courseservice
    networks:
      courseservice-internal:

  forumservice-app:
    build:
      context: ../../backend/forumService
    container_name: forumservice-app
    ports:
      - 8080
    depends_on:
      - apigateway-app
      - forumservice-db
      - eurekaserver-app
    networks:
      forumservice-internal:
      internal:
    labels:
      kompose.image-pull-policy: Never

  forumservice-db:
    image: postgres
    container_name: forumservice-db
    restart: unless-stopped
    volumes:
      - forumservice-db-data:/var/lib/postgresql/data
    ports:
      - 5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: forumservice
    networks:
      forumservice-internal:

  apigateway-app:
    build:
      context: ../../../backend/apigateway
    container_name: apigateway-app
    depends_on:
      - eurekaserver-app
    ports:
      - 8080
    networks:
      - internal
    labels:
      kompose.image-pull-policy: Never
      kompose.service.type: loadbalancer

  eurekaserver-app:
    build:
      context: ../../backend/eurekaServer
    container_name: eurekaserver-app
    ports:
      - 8761
    networks:
      internal:
    labels:
      kompose.image-pull-policy: Never

  messageservice-app:
    build:
      context: ../../backend/messageService
    container_name: messageservice-app
    depends_on:
      - eurekaserver-app
      - rabbitmq
    ports:
      - 8080
    networks:
      internal:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672    # AMQP protocol port
      - 15672   # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
    restart: unless-stopped
    networks:
      internal:


volumes:
  userservice-db-data: {}
  fileservice-db-data: {}
  fileservice-db-config: {}
  courseservice-db-data: {}
  forumservice-db-data: {}
  rabbitmq-data: { }
  rabbitmq-log: { }

networks:
  internal: {}
  userservice-internal: {}
  fileservice-internal: {}
  courseservice-internal: {}
  forumservice-internal: {}