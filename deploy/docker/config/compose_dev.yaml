services:
  userservice-app:
    build:
      context: ../../../backend/userService
      args:
        firebase_service_account_file: firebase_service_account_file.json
    container_name: userservice-app
    depends_on:
      - userservice-db
      - eurekaserver-app
    ports:
      - 8081:8080
    networks:
      userservice-internal:
      internal:
        aliases:
          - userservice

  userservice-db:
    image: postgres
    container_name: userservice-db
    restart: unless-stopped
    volumes:
      - userservice-db-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userservice
    networks:
      userservice-internal:
        aliases:
          - userservicedb

  fileservice-app:
    build:
      context: ../../../backend/fileService
    container_name: fileservice-app
    depends_on:
      - fileservice-db
      - eurekaserver-app
    ports:
      - 8082:8080
    networks:
      fileservice-internal:
      internal:
        aliases:
          - fileservice

  fileservice-db:
    image: mongo
    container_name: fileservice-db
    ports:
      - 27017:27017
    volumes:
      - fileservice-db-data:/data/db
      - fileservice-db-config:/data/configdb
    # environment: TODO: mettere a posto credenziali!
      # MONGO_INITDB_ROOT_USERNAME: admin
      # MONGO_INITDB_ROOT_PASSWORD: password
      # MONGO_INITDB_DATABASE: fileservice
    networks:
      fileservice-internal:
        aliases:
          - fileservicedb

  courseservice-app:
    build:
      context: ../../../backend/courseservice
    container_name: courseservice-app
    depends_on:
      - courseservice-db
      - eurekaserver-app
    ports:
      - 8083:8080
    networks:
      courseservice-internal:
      internal:
        aliases:
          - courseservice

  courseservice-db:
    image: postgres
    container_name: courseservice-db
    restart: unless-stopped
    volumes:
      - courseservice-db-data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: courseservice
    networks:
      courseservice-internal:
        aliases:
          - courseservicedb

  forumservice-app:
    build:
      context: ../../../backend/forumService
    container_name: forumservice-app
    depends_on:
      - forumservice-db
      - eurekaserver-app
    ports:
      - 8084:8080
    networks:
      forumservice-internal:
      internal:
        aliases:
          - forumservice

  forumservice-db:
    image: postgres
    container_name: forumservice-db
    restart: unless-stopped
    volumes:
      - forumservice-db-data:/var/lib/postgresql/data
    ports:
      - 5435:5432
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: forumservice
    networks:
      forumservice-internal:
        aliases:
          - forumservicedb

  apigateway-app:
    build:
      context: ../../../backend/apigateway
    container_name: apigateway-app
    depends_on:
      - eurekaserver-app
    ports:
      - 8080:8080
    networks:
      - internal

  eurekaserver-app:
    build:
      context: ../../../backend/eurekaServer
    container_name: eurekaserver-app
    ports:
      - 8761:8761
    networks:
      internal:
        aliases:
          - eurekaserver

#  rabbitmq:
#    build:
#      context: rabbitMQ
#    container_name: rabbitMQ
#    restart: unless-stopped
#    ports:
#      - 5672:5672
#      - 15672:15672 # management
#    networks:
#      - internal


volumes:
  userservice-db-data: {}
  fileservice-db-data: {}
  fileservice-db-config: {}
  courseservice-db-data: {}
  forumservice-db-data: {}

networks:
  internal: {}
  userservice-internal: {}
  fileservice-internal: {}
  courseservice-internal: {}
  forumservice-internal: {}
